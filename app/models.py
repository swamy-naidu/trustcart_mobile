from django.db import models

class UsersDetailsModel(models.Model):
    idno = models.AutoField(primary_key=True)
    name = models.CharField(max_length=30)
    gender = models.CharField(max_length=20)
    mobile_no = models.IntegerField(unique=True)
    email = models.EmailField(max_length=30)
    password = models.CharField(max_length=20)
    balance = models.FloatField(default=False)

class ProductsModel(models.Model):
    product_id = models.IntegerField()
    model_no = models.CharField(primary_key=True,max_length=30)
    name = models.CharField(max_length=30)
    category = models.CharField(max_length=30,choices=[('Mobiles','Mobiles'),('Laptops','Laptops'),('Cameras','Cameras'),('Tvs','Tvs')])
    quantity = models.IntegerField()
    seller = models.CharField(max_length=50)
    photo = models.ImageField(upload_to="products/",default=False)

    def __str__(self):
        return self.name


class MobilesModel(models.Model):
    mobile_id = models.IntegerField()
    brand = models.CharField(max_length=50)
    tittle = models.CharField(max_length=200)
    price = models.FloatField()
    in_the_box = models.CharField(max_length=200)
    model_no = models.ForeignKey(ProductsModel,on_delete=models.CASCADE)
    model_name = models.CharField(max_length=150)
    color = models.CharField(max_length=150)
    sim_type = models.CharField(max_length=150)
    display_size = models.CharField(max_length=150)
    resolution = models.CharField(max_length=150)
    resolution_type = models.CharField(max_length=150)
    gpu = models.CharField(max_length=150)
    other_display_features = models.CharField(max_length=450)
    os = models.CharField(max_length=150)
    processor_type = models.CharField(max_length=150)
    internal_storage = models.CharField(max_length=150)
    ram = models.CharField(max_length=150)
    expandable_storage = models.CharField(max_length=150)
    primary_camera_Available =  models.CharField(max_length=150)
    primary_camera =  models.CharField(max_length=150)
    primary_camera_features =  models.CharField(max_length=500)
    secondary_camera_available =  models.CharField(max_length=150)
    secondary_camera =  models.CharField(max_length=150)
    secondary_camera_features =  models.CharField(max_length=500)
    network_type =  models.CharField(max_length=150)
    supported_networks =  models.CharField(max_length=150)
    interenet_connectivity =  models.CharField(max_length=150)
    buetooth_support = models.CharField(max_length=150)
    buetooth_version = models.CharField(max_length=150)
    wifi = models.CharField(max_length=150)
    wifi_version = models.CharField(max_length=150)
    wifi_hotspot = models.CharField(max_length=150)
    usb_connectivity = models.CharField(max_length=150)
    audio_jack = models.CharField(max_length=150)
    gps_support = models.CharField(max_length=150)
    removable_battery = models.CharField(max_length=150)
    sensors = models.CharField(max_length=150)
    battery_capacity = models.CharField(max_length=150)
    battery_type = models.CharField(max_length=150)
    width = models.CharField(max_length=150)
    height = models.CharField(max_length=150)
    depth = models.CharField(max_length=150)
    weight = models.CharField(max_length=150)
    warrenty = models.CharField(max_length=100)
    category = models.CharField(max_length=30,choices=[('Mobiles', 'Mobiles'), ('Laptops', 'Laptops'), ('Cameras', 'Cameras'),('Tvs', 'Tvs')],default=False)
    photo = models.ImageField(upload_to="mobiles/")


class LaptopsModel(models.Model):
    laptop_id = models.IntegerField()
    brand = models.CharField(max_length=50)
    tittle = models.CharField(max_length=250)
    price = models.FloatField()
    sales_package = models.CharField(max_length=200)
    model_no = models.ForeignKey(ProductsModel, on_delete=models.CASCADE)
    series = models.CharField(max_length=150)
    color = models.CharField(max_length=150)
    type = models.CharField(max_length=150)
    suitable_for = models.CharField(max_length=150)
    power_supply = models.CharField(max_length=150)
    msoffice_provided = models.CharField(max_length=50)
    processor_brand = models.CharField(max_length=150)
    processor_name = models.CharField(max_length=150)
    processor_genereation = models.CharField(max_length=150)
    ssd = models.CharField(max_length=50)
    ssd_capacity = models.CharField(max_length=50)
    hdd_capacity = models.CharField(max_length=50)
    ram = models.CharField(max_length=50)
    ram_type = models.CharField(max_length=150)
    ram_frequency = models.CharField(max_length=150)
    clock_speed = models.CharField(max_length=150)
    cache = models.CharField(max_length=50)
    graphic_processor = models.CharField(max_length=150)
    os_architecture = models.CharField(max_length=50)
    operating_system = models.CharField(max_length=50)
    system_architecture = models.CharField(max_length=50)
    mic_in = models.CharField(max_length=50)
    rj45 = models.CharField(max_length=50)
    usb_port = models.CharField(max_length=50)
    hdmi_port = models.CharField(max_length=50)
    multicard_slot = models.CharField(max_length=50)
    touchscreen = models.CharField(max_length=50)
    screen_size = models.CharField(max_length=150)
    screen_resolution = models.CharField(max_length=150)
    screen_type = models.CharField(max_length=50)
    speakers = models.CharField(max_length=50)
    internal_mic = models.CharField(max_length=50)
    wireless_lan = models.CharField(max_length=50)
    bluetooth = models.CharField(max_length=150)
    ethernet = models.CharField(max_length=50)
    dimensions = models.CharField(max_length=150)
    weight = models.CharField(max_length=50)
    disk_drive = models.CharField(max_length=50)
    web_camera = models.CharField(max_length=150)
    keyboard = models.CharField(max_length=150)
    pointer_device = models.CharField(max_length=150)
    included_softwares = models.CharField(max_length=150)
    warranty_summary = models.CharField(max_length=150)
    warranty_service_type = models.CharField(max_length=150)
    covered_in_warrenty = models.CharField(max_length=150)
    not_covered_in_warrenty = models.CharField(max_length=150)
    domestic_warrenty = models.CharField(max_length=150)
    category = models.CharField(max_length=30,
                                choices=[('Mobiles', 'Mobiles'), ('Laptops', 'Laptops'), ('Cameras', 'Cameras'),
                                         ('Tvs', 'Tvs')],default=False)
    photo = models.ImageField(upload_to="laptops/")



class CamerasModel(models.Model):
    camera_id = models.IntegerField()
    brand = models.CharField(max_length=50)
    tittle = models.CharField(max_length=200)
    price = models.FloatField()
    in_the_box = models.CharField(max_length=250)
    model_no = models.ForeignKey(ProductsModel, on_delete=models.CASCADE)
    model_name = models.CharField(max_length=100)
    color = models.CharField(max_length=100)
    type = models.CharField(max_length=100)
    effective_pixels = models.CharField(max_length=100)
    tripod_socket = models.CharField(max_length=100)
    wifi = models.CharField(max_length=100)
    sensor_type = models.CharField(max_length=100)
    image_sensor_size = models.CharField(max_length=100)
    lens_mount = models.CharField(max_length=100)
    dust_reduction = models.CharField(max_length=100)
    shutter_speed = models.CharField(max_length=100)
    self_timer = models.CharField(max_length=100)
    image_format = models.CharField(max_length=100)
    video_resolution = models.CharField(max_length=100)
    video_quality = models.CharField(max_length=100)
    display_type = models.CharField(max_length=100)
    display_size = models.CharField(max_length=100)
    touchscreen = models.CharField(max_length=100)
    compatible_card = models.CharField(max_length=100)
    battery_type = models.CharField(max_length=100)
    width = models.CharField(max_length=100)
    height = models.CharField(max_length=100)
    depth = models.CharField(max_length=100)
    weight = models.CharField(max_length=100)
    warranty_summary = models.CharField(max_length=150)
    service_type = models.CharField(max_length=150)
    covered_in_warrenty = models.CharField(max_length=150)
    not_covered_in_warrenty = models.CharField(max_length=150)
    category = models.CharField(max_length=30,
                                choices=[('Mobiles', 'Mobiles'), ('Laptops', 'Laptops'), ('Cameras', 'Cameras'),
                                         ('Tvs', 'Tvs')],default=False)
    photo = models.ImageField(upload_to="cameras/")



class TelivisionsModel(models.Model):
    telivision_id = models.IntegerField()
    brand = models.CharField(max_length=50)
    tittle = models.CharField(max_length=200)
    price = models.FloatField()
    in_the_box = models.CharField(max_length=200)
    model_no = models.ForeignKey(ProductsModel, on_delete=models.CASCADE)
    display_size = models.CharField(max_length=100)
    screeen_type = models.CharField(max_length=100)
    HD_technology_Resolution = models.CharField(max_length=100)
    smart_tv = models.CharField(max_length=100)
    curve_tv = models.CharField(max_length=100)
    series = models.CharField(max_length=100)
    touchscreen = models.CharField(max_length=100)
    hdmi = models.CharField(max_length=100)
    usb = models.CharField(max_length=100)
    wifi_type = models.CharField(max_length=100)
    builtin_wifi = models.CharField(max_length=100)
    launch_year = models.CharField(max_length=100)
    ethernet = models.CharField(max_length=100)
    other_internet_features = models.CharField(max_length=400)
    nfc_support = models.CharField(max_length=100)
    contrast_ratio = models.CharField(max_length=100)
    view_angle = models.CharField(max_length=100)
    digital_noise_filter = models.CharField(max_length=100)
    led_display_type = models.CharField(max_length=100)
    aspect_ratio = models.CharField(max_length=100)
    refresh_rate = models.CharField(max_length=100)
    other_video_features = models.CharField(max_length=400)
    number_of_cores = models.CharField(max_length=100)
    processor = models.CharField(max_length=100)
    ram_capacity = models.CharField(max_length=100)
    storage_memory = models.CharField(max_length=100)
    supported_app_netflix =  models.CharField(max_length=100)
    supported_app_hotstar =  models.CharField(max_length=100)
    supported_app_youtube =  models.CharField(max_length=100)
    supported_app_primevideo =  models.CharField(max_length=100)
    supported_mobile_operating_system =  models.CharField(max_length=100)
    os_present =  models.CharField(max_length=100)
    screen_mirroring =  models.CharField(max_length=100)
    appstore_type =  models.CharField(max_length=100)
    content_providers =  models.CharField(max_length=100)
    system_languages =  models.CharField(max_length=100)
    number_of_speakers =  models.CharField(max_length=100)
    speaker_type =  models.CharField(max_length=100)
    surround_sound =  models.CharField(max_length=100)
    speaker_output =  models.CharField(max_length=100)
    sound_mode =  models.CharField(max_length=100)
    other_audio_features =  models.CharField(max_length=400)
    power_requirement =  models.CharField(max_length=100)
    power_consumption =  models.CharField(max_length=100)
    touch_remote =  models.CharField(max_length=100)
    smart_remote =  models.CharField(max_length=100)
    rf_cable =  models.CharField(max_length=100)
    internet_access =  models.CharField(max_length=100)
    additional_features =  models.CharField(max_length=400)
    width_x_height_x_depth_withoutstand =  models.CharField(max_length=100)
    weight_withoutstand =  models.CharField(max_length=100)
    width_x_height_x_depth_withstand = models.CharField(max_length=100)
    weight_withstand = models.CharField(max_length=100)
    stand_type = models.CharField(max_length=100)
    warranty_summary = models.CharField(max_length=150)
    service_type = models.CharField(max_length=150)
    covered_in_warrenty = models.CharField(max_length=150)
    not_covered_in_warrenty = models.CharField(max_length=150)
    category = models.CharField(max_length=30,
                                choices=[('Mobiles', 'Mobiles'), ('Laptops', 'Laptops'), ('Cameras', 'Cameras'),
                                         ('Tvs', 'Tvs')],default=False)
    photo = models.ImageField(upload_to="telivisions/")


class CartModel(models.Model):
    idno = models.IntegerField()
    name = models.CharField(max_length=50)
    model_no = models.CharField(max_length=40)
    category = models.CharField(max_length=50)
    cart_id = models.IntegerField(primary_key=True)

class OrdersModel(models.Model):
    idno = models.IntegerField()
    name = models.CharField(max_length=50)
    model_no = models.CharField(max_length=40)
    category = models.CharField(max_length=50)
    quantity = models.IntegerField()
    total = models.FloatField()
    ordered_date = models.DateField(auto_now_add=True)
    order_id = models.IntegerField(primary_key=True)
    address = models.CharField(max_length=200)
    loaclity = models.CharField(max_length=200)
    city = models.CharField(max_length=200)
    state = models.CharField(max_length=200)
    pin = models.IntegerField(default=False)
    product_name = models.CharField(max_length=500)
    product_price = models.FloatField(default=False)
    photo = models.ImageField(upload_to="telivisions/")


class AddressModel(models.Model):
    address_id = models.IntegerField(primary_key=True)
    idno = models.IntegerField()
    name = models.CharField(max_length=50)
    mobile = models.IntegerField()
    pin = models.IntegerField()
    locality = models.CharField(max_length=40)
    address = models.CharField(max_length=100)
    city = models.CharField(max_length=100)
    state = models.CharField(max_length=100)
    type = models.CharField(max_length=100)

class SavedCardsModel(models.Model):
    card_id = models.IntegerField(primary_key=True)
    idno = models.IntegerField()
    card_no = models.IntegerField()
    expiry_mm = models.IntegerField()
    expiry_yy = models.IntegerField()
    name_on_card = models.CharField(max_length=40)

class ReviewsModel(models.Model):
    review_id = models.IntegerField(primary_key=True)
    idno = models.IntegerField()
    tittle = models.CharField(max_length=100)
    description = models.CharField(max_length=1000)
    rating = models.IntegerField()

class PersonalInformationModel(models.Model):
    idno = models.IntegerField()
    balance = models.FloatField()

class GiftCardsModel(models.Model):
    gift_id = models.IntegerField(primary_key=True)
    idno = models.IntegerField()
    name = models.CharField(max_length=40)
    gift_card_no = models.IntegerField()
    balance = models.FloatField()
    reciever_email = models.EmailField()



